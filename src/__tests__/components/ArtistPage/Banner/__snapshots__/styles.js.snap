// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component | StyledBanner should render a styled component 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  background-color: ",
          [Function],
          ";
  margin-bottom: 80px;
  padding: 60px 0 100px;
  position: relative;
  @media only screen and (max-width: ",
          [Function],
          ") {
    padding: 40px 0;
  }         
  @media only screen and (max-width: ",
          [Function],
          ") {
    padding: 30px 0;
  }     
  & > div {
    display: grid;
    grid-gap: 30px;
    grid-template-columns: 120px 1fr;
    @media only screen and (max-width: ",
          [Function],
          ") {
      grid-template-columns: 100px 1fr;
    }         
    @media only screen and (max-width: ",
          [Function],
          ") {
      grid-template-columns: 1fr;
    }         
  }
  img {
    border-radius: 100%;
    @media only screen and (max-width: ",
          [Function],
          ") {
      height: 100px;
      width: 100px;
    }  
  }
  h1 {
    color: white;
    font-weight: 500;
    font-size: 6rem;
    margin: 0;
    @media only screen and (max-width: ",
          [Function],
          ") {
      font-size: 5rem;
    }     
    @media only screen and (max-width: ",
          [Function],
          ") {
      font-size: 3rem;
    }     
  }
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  li {
    display: inline-block;
    color: ",
          [Function],
          ";
    font-size: 2rem;
    font-weight: 500;
    text-transform: uppercase;
    @media only screen and (max-width: ",
          [Function],
          ") {
      font-size: 1.5rem;
    }      
    @media only screen and (max-width: ",
          [Function],
          ") {
      font-size: 1rem;
    }         
  }
  span {
    margin: 0 10px;
    @media only screen and (max-width: ",
          [Function],
          ") {
      margin: 0 4px;
    }     
  }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;
